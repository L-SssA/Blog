(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{406:function(t,s,a){"use strict";a.r(s);var e=a(44),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vuepress入门学习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vuepress入门学习"}},[t._v("#")]),t._v(" Vuepress入门学习")]),t._v(" "),a("blockquote",[a("h3",{attrs:{id:"参考资料："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料："}},[t._v("#")]),t._v(" 参考资料：")]),t._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://www.vuepress.cn/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),a("br"),t._v(" "),a("a",{attrs:{href:"https://www.bilibili.com/video/BV1vb411m7NY",target:"_blank",rel:"noopener noreferrer"}},[t._v("我认为讲得很不错的B站视频教程（新，2020年04月09日重制）"),a("OutboundLink")],1)])])]),t._v(" "),a("h2",{attrs:{id:"前期准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前期准备"}},[t._v("#")]),t._v(" 前期准备")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("GitHub")]),t._v(" 个人账户，"),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("注册。")]),t._v(" "),a("li",[a("code",[t._v("node.js")]),t._v(" "),a("a",{attrs:{href:"https://nodejs.org/zh-cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("下载安装。")]),t._v(" "),a("li",[t._v("依赖包管理工具：\n"),a("ul",[a("li",[a("code",[t._v("npm")]),t._v("（安装 "),a("code",[t._v("node.js")]),t._v(" 自带）。")]),t._v(" "),a("li",[t._v("VuePress 官方推荐使用 "),a("code",[t._v("yarn")]),t._v("（"),a("a",{attrs:{href:"https://yarn.bootcss.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("下载安装，但这里还是使用 "),a("code",[t._v("npm")]),t._v("）。")])])]),t._v(" "),a("li",[t._v("编辑器\n"),a("ul",[a("li",[t._v("选择有很多，不一一列举。")]),t._v(" "),a("li",[t._v("这里使用 "),a("code",[t._v("VS Code")]),t._v("，"),a("a",{attrs:{href:"https://code.visualstudio.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("下载安装。")])])]),t._v(" "),a("li",[t._v("命令行工具：\n"),a("ul",[a("li",[t._v("可以使用 windows 自带的命令行工具 "),a("code",[t._v("cmd")]),t._v("、"),a("code",[t._v("PowerShell")]),t._v(" 等等，")]),t._v(" "),a("li",[t._v("也可以使用 git 自带的 "),a("code",[t._v("Git Bash")]),t._v("。")]),t._v(" "),a("li",[t._v("还可以使用 VS Code 自带的终端工具（"),a("code",[t._v("这里采用")]),t._v("的就是这个终端工具）。")]),t._v(" "),a("li",[t._v("还有一些其他的工具就不一一列举。")])])]),t._v(" "),a("li",[t._v("代码管理工具 "),a("code",[t._v("git")]),t._v("，"),a("a",{attrs:{href:"https://git-scm.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("下载安装。")])]),t._v(" "),a("h2",{attrs:{id:"开始构建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#开始构建"}},[t._v("#")]),t._v(" 开始构建")]),t._v(" "),a("h3",{attrs:{id:"使用-npm-全局安装-vuepress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-npm-全局安装-vuepress"}},[t._v("#")]),t._v(" 使用 npm 全局安装 Vuepress")]),t._v(" "),a("p",[t._v("  在控制台中执行以下命令即可全局安装 VuePress。")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -g vuepress\n")])])]),a("h3",{attrs:{id:"约定优于配置原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#约定优于配置原则"}},[t._v("#")]),t._v(" 约定优于配置原则")]),t._v(" "),a("p",[t._v("  按照"),a("RouterLink",{attrs:{to:"/Vuepress/vuepress.cn/guide/directory-structure.html#目录结构"}},[t._v("官方文档")]),t._v('的描述，Vuepress 遵循"'),a("strong",[t._v("约定优于配置")]),t._v('"的原则进行文件管理。"'),a("strong",[t._v("约定优于配置")]),t._v('"的意思是使用约定的方法让使用者遵循一些规范来构建项目，官方框架就会按照固定的形式来解析项目，比起一长串的配置项这样的方式显然更加直观。因此，官方给使用者提供了如下目录结构的规范：')],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("  \n├── docs "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建时使用的根目录，理论上可以是任何文件名，但是建议为 docs，这样相对规范些。  ")]),t._v("\n│   ├── "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vuepress "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，用于存放全局的代码文件，包括配置、组件、静态资源等等。  ")]),t._v("\n│   │   ├── components "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，的 Vue 组件均会被自动注册为全局组件，可以在 md 中通过标签的形式直接使用。  ")]),t._v("\n│   │   ├── theme  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，用于存放本地主题，也可以在这里开发自定义主题。")]),t._v("\n│   │   │   └──Layout"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vue "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果要开发自定义主题，则此文件为默认 Layout 文件。  ")]),t._v("\n│   │   ├──"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，静态资源文件夹，静态资源都会从此文件夹开始检索。")]),t._v("\n│   │   ├── styles "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，存放样式相关文件。")]),t._v("\n│   │   │   ├── index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styl "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，全局样式文件，会生成在最终的 CSS 文件结尾，具有比默认样式更高的优先级。  ")]),t._v("\n│   │   │   └── palette"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("styl "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，用于重写默认颜色常量，或者设置新的 stylus 颜色常量。  ")]),t._v("\n│   │   ├── templates "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，慎写，存储 HTML 模板文件，会直接改变页面的 HTML 模板。")]),t._v("\n│   │   │   ├── dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用于开发环境的 HTML 模板文件。")]),t._v("\n│   │   │   └── ssr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构建时基于 Vue SSR 的 HTML 模板文件。")]),t._v("\n│   │   ├── config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，配置文件的入口文件，也可以是 YML 或 toml。")]),t._v("\n│   │   └── enhanceApp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 可选，客户端应用的增强。")]),t._v("\n│   │   \n│   ├── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 会被编译为 index.html，在路由中会被检索为默认页面。")]),t._v("\n│   └── guide "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 文章文件夹，可以使用路由的方式访问。")]),t._v("\n│       └── "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("README")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("md  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 同上方 README.md，此处当访问 /guide/ 时会打开这个文档。")]),t._v("\n│   \n└── "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("json "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 包文件 ")]),t._v("\n")])])]),a("p",[t._v("  根据上面的目录结构可知，一个最简单的 Vuepress 项包含一个根目录文件夹 "),a("code",[t._v("docs")]),t._v(" 和主页页面 "),a("code",[t._v("README.md")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"主页配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主页配置"}},[t._v("#")]),t._v(" 主页配置")]),t._v(" "),a("p",[t._v("  在官网中点击上方导航栏 "),a("code",[t._v("主题")]),t._v("->"),a("code",[t._v("默认主题配置")]),t._v("->"),a("code",[t._v("首页")]),t._v(" 则会得到如下代码，这种代码是 "),a("code",[t._v("yaml")]),t._v(" 格式的代码，写在 markdown 文件的头部，用 "),a("code",[t._v("---")]),t._v(" 包裹，Vuepress 将会自动解析里面的配置作为页面属性。"),a("br"),t._v("\n  而下面一段代码则是默认主题中首页的配置项。直接粘贴到 docs 目录下作为首页的 "),a("code",[t._v("README.md")]),t._v(" 文件头部，默认主题将会自动获取对应属性并渲染到主页上。")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("home")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("heroImage")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /hero.png\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("heroText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hero 标题\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tagline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Hero 副标题\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("actionText")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 快速上手 →\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("actionLink")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /zh/guide/\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("features")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 简洁至上\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("details")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 以 Markdown 为中心的项目结构，以最少的配置帮助你专注于写作。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Vue驱动\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("details")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 享受 Vue + webpack 的开发体验，在 Markdown 中使用 Vue 组件，同时可以使用 Vue 来开发自定义主题。\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("title")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 高性能\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("details")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" VuePress 为每个页面预渲染生成静态的 HTML，同时在页面被加载的时候，将作为 SPA 运行。\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("footer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" MIT Licensed "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),t._v(" Copyright © 2018"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("present Evan You\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n")])])]),a("p",[t._v("  这样，一个只有一个主页的 Vuepress 项目就做好了。")]),t._v(" "),a("h3",{attrs:{id:"运行测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行测试"}},[t._v("#")]),t._v(" 运行测试")]),t._v(" "),a("p",[t._v("  在构建完上述页面后，应该运行测试一下构建好的页面，尽管它是最简单的、还没有编写任何内容的页面。在项目根目录下使用控制台执行如下代码（VS Code 的控制台在上方导航栏中的 "),a("code",[t._v("终端")]),t._v(" 的下拉列表中点击 "),a("code",[t._v("新建终端")]),t._v(" 即可打开）。")]),t._v(" "),a("div",{staticClass:"language-Bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("vuepress dev docs\n")])])]),a("p",[t._v("  命令中，docs 对应的就是 docs 文件夹的名字。\n  等待页面编译完成后，vuepress 会监听对应的端口，此时打开浏览器，输入控制台打印的网址即可看到对应的效果。"),a("br"),t._v("\n  如果使用过 "),a("code",[t._v("npm")]),t._v(" 的小伙伴应该知道可以在 "),a("code",[t._v("package.json")]),t._v(" 中添加 "),a("code",[t._v("scripts")]),t._v(" 脚本来封装一系列命令，因此在 "),a("code",[t._v("package.json")]),t._v(" 中添加如下代码来封装对应操作（代码中的 build 为打包部署项目时用到的指令）。")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"dev"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress dev docs"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"build"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"vuepress build docs"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  添加完成后，可以通过在控制台执行 "),a("code",[t._v("npm run dev")]),t._v(" 来运行 "),a("code",[t._v("scripts")]),t._v(" 中封装的 "),a("code",[t._v("dev")]),t._v(" 脚本，它的效果等同于 "),a("code",[t._v("vuepress dev docs")]),t._v("。")]),t._v(" "),a("h2",{attrs:{id:"构建多文章内容页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#构建多文章内容页"}},[t._v("#")]),t._v(" 构建多文章内容页")]),t._v(" "),a("p",[t._v("  注意这里说的只是渲染不同的文档内容，由于 VuePress 是基于 Vue 开发的，因此本质上还是 SPA。")]),t._v(" "),a("h3",{attrs:{id:"页面路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面路由"}},[t._v("#")]),t._v(" 页面路由")]),t._v(" "),a("p",[t._v("  想要构建拥有不同内容页的 Vuepress 项目，页面路由是必须的。Vuepress 中，页面路由是需要规范的：")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("文件路径")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("对应的页面路由")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("README.md")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("/")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("guide/README.md")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("/guide/")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("guide/guide.md")])]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("/guide/guide[.html]")])])])])]),t._v(" "),a("p",[t._v("  从上面表格不难看出，Vuepress 以页面文件夹的"),a("code",[t._v("根目录")]),t._v("作为起点开始检索页面（此处显然以 "),a("code",[t._v("docs")]),t._v(" 为根目录），以某一个页面作为默认访问页面（此处是 "),a("code",[t._v("README.md")]),t._v("），此外其他页面则以对应文件名为访问地址。"),a("br"),t._v("\n  不仅如此，如果了解过 Vuepress 对 markdown 文档的转换，可以知道 "),a("code",[t._v("README.md")]),t._v(" 会转换成 "),a("code",[t._v("index.html")]),t._v("，而其他文档则会转换为 "),a("code",[t._v("文件名.html")]),t._v("，然后当路由访问对应文件夹名而没有访问文件名时，路由会直接查找 "),a("code",[t._v("index.html")]),t._v("（这种路由方式我忘记是什么时候用过了，但是的确很常见，见到这种路由方式应该快速理解，而且 "),a("code",[t._v("GitHub Pages")]),t._v(" 也是用的这种路由方式）。")]),t._v(" "),a("h3",{attrs:{id:"配置导航栏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置导航栏"}},[t._v("#")]),t._v(" 配置导航栏")]),t._v(" "),a("p",[t._v("  导航栏的配置需要创建配置文件，而在目录结构中说过，应该创建在 "),a("code",[t._v(".vuepress")]),t._v(" 文件夹中创建 "),a("code",[t._v("config.js")]),t._v(" 作为配置文件的入口。文件创建完成之后，应该使用 "),a("code",[t._v("module.exports = {}")]),t._v(" 导出配置对象，在 "),a("code",[t._v("{}")]),t._v(" 中编写对应的设置。"),a("br"),t._v("\n  导航栏的配置在 "),a("code",[t._v("themeConfig")]),t._v(" 对象中完成。在 "),a("code",[t._v("config.js")]),t._v(" 中添加如下代码配置导航栏属性，默认主题会根据配置完成导航栏的渲染。注意，导航栏可以设置普通的导航按钮和导航下拉列表。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  themeConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    logo"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/assets/img/logo.png'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 设置导航栏上的 logo")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  nav"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Home'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 导航按钮写法，text 是显示的文本，link 是对应的路由地址。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Guide'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/guide/'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'External'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://google.com'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \n      items"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 用 items 代替 link 则会渲染成一个列表。")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// items 为一个数组，数组中保存对应列表的 item 对象，写法和单按钮写法相同。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'item3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" link"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  此时，如果有一个需求，某些页面不需要显示导航栏，则可以在文档头部 "),a("code",[t._v("yaml")]),t._v(" 配置中添加 "),a("code",[t._v("navbar:false")]),t._v("。如果全都不需要导航栏，则可以在 "),a("code",[t._v("config.js")]),t._v(" 的 "),a("code",[t._v("themeConfig")]),t._v(" 中添加 "),a("code",[t._v("navbar: false")]),t._v(" 来禁用所有导航栏。")]),t._v(" "),a("h3",{attrs:{id:"侧边栏"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#侧边栏"}},[t._v("#")]),t._v(" 侧边栏")]),t._v(" "),a("p",[t._v("  侧边栏通过在 "),a("code",[t._v("config.js")]),t._v(" 的 "),a("code",[t._v("themeConfig")]),t._v(" 中配置 sidebar 来实现。写法如下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .vuepress/config.js")]),t._v("\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  themeConfig"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    sidebar"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sidebar 数组保存想要自定义生成的列表对应的页面的路由地址。路由规则不再过多赘述，唯一需要注意的是，文件名后缀可以使用 .md，但可以省略为什么不呢。")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 以 / 结尾表示该目录下的 README.md 页面")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/page-a'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 列表标题按照文章中的标题文字显示")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/page-b'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Explicit link text'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 也可以使用数组形式自定义文字")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  我对于自定义侧边栏的看法，多文章侧边栏一般是用于整合多文档系列教程，需要有多个文章在内容上有关联，显然对于博客文章并不十分适用，因此也不展开叙述，有兴趣可到"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/default-theme-config.html#%E4%BE%A7%E8%BE%B9%E6%A0%8F",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("查看。"),a("br"),t._v("\n  但是 VuePress 的自动侧边栏还是推荐使用的，因为它可以在文章内部自动生成标题连接，使目录结构更加清晰地展现，同时，VuePress 的侧边栏还有导航功能，可以快速跳转到对应的小节，使用方法是不设置 sidebar 或者给 sidebar 设置默认值 "),a("code",[t._v("'auto'")]),t._v(" （注意是表示为字符串值，需要把引号加上），至于局部设置和全局设置可以参照上面的导航栏。")]),t._v(" "),a("h2",{attrs:{id:"个性化配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#个性化配置"}},[t._v("#")]),t._v(" 个性化配置")]),t._v(" "),a("p",[t._v("  为了是页面更加美观，个性化设置是必不可少的，以下为默认主题下的个性化配置：")]),t._v(" "),a("h3",{attrs:{id:"最后更新时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#最后更新时间"}},[t._v("#")]),t._v(" 最后更新时间")]),t._v(" "),a("p",[t._v("  VuePress 通过获取 "),a("code",[t._v("git")]),t._v(" 最后一次提交的 UNIX 时间戳来实现文章的最后更新时间，然后，通过处理，将时间戳转换为合适的日期格式显示在文件底部。注意点有以下几点：")]),t._v(" "),a("ul",[a("li",[t._v("lastUpdated 属于插件，这表示如果自定义主题，则需要自己安装并整合。但默认主题对这个插件进行了整合，因此，只需要在 "),a("code",[t._v("themeConfig.lastUpdated")]),t._v(" 中设置"),a("code",[t._v("对应的文字前缀")]),t._v("或者 "),a("code",[t._v("true")]),t._v("。当设置为 true 时，文字默认显示为 "),a("code",[t._v("Last Updated:[time]")]),t._v("，否则显示设置好的文字。")]),t._v(" "),a("li",[a("code",[t._v("lastUpdated")]),t._v(" 是基于 "),a("code",[t._v("git")]),t._v(" 时间戳的，因此只有文章添加到 git 管理中，时间才会显示。")])]),t._v(" "),a("p",[t._v("  如果对 lastUpdated 的时间显示格式不太满意，则需要通过 "),a("code",[t._v("moment.js")]),t._v(" 来对时间进行格式化。具体操作如下：")]),t._v(" "),a("ul",[a("li",[t._v("使用 "),a("code",[t._v("npm")]),t._v(" 下载 moment 包：在控制台中输入指令 "),a("code",[t._v("npm install moment")]),t._v(" 即可。")]),t._v(" "),a("li",[t._v("在 "),a("code",[t._v("config.js")]),t._v(" 中，使用 "),a("code",[t._v("const moment = require('moment')")]),t._v(" 的方法引入 moment，这样就可以在 "),a("code",[t._v("config.js")]),t._v(" 中使用 moment.js 了。")]),t._v(" "),a("li",[t._v("最后配置项中添加如下代码：")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   plugins"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件模块")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@vuepress/last-updated'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件名称")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("transformer")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("timestamp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// lastUpdated 插件提供的函数")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("moment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("format")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lll'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 返回经过 moment.js 处理的结果")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[t._v("以上代码段为我个人的配置格式，更多配置参考"),a("a",{attrs:{href:"https://www.vuepress.cn/plugin/official/plugin-last-updated.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("，同时，moment.js 处理的格式也有更多，可以参考"),a("a",{attrs:{href:"http://momentjs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("moment.js 官方文档"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"页面跳转平滑滚动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#页面跳转平滑滚动"}},[t._v("#")]),t._v(" 页面跳转平滑滚动")]),t._v(" "),a("p",[t._v("  这个功能是当你在 sidebar 点击某个标题进行跳转时，页面进行滚动跳转，而不是直接跳到对应的锚点。"),a("br"),t._v("\n  原本我以为这是 VuePress 自带的功能，查看了默认主题的源码才知道是一个叫 "),a("code",[t._v("smooth-scroll")]),t._v(" 的插件。但不管这么说，在默认主题下，直接在 "),a("code",[t._v("config.js")]),t._v(" 中添加如下代码即可启用功能：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  themeConfig "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    smoothScroll"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"自定义样式和自定义页面类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义样式和自定义页面类"}},[t._v("#")]),t._v(" 自定义样式和自定义页面类")]),t._v(" "),a("p",[t._v("  如果看过官方文档，那可能会被默认主题配置中的自定义页面类的教程坑一下。先看看"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/default-theme-config.html#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E7%B1%BB",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("中描述的自定义页面类的步骤：")]),t._v(" "),a("ul",[a("li",[t._v("在 markdown 文件中的 "),a("code",[t._v("YAML front matter")]),t._v(" 块中声明一个 "),a("code",[t._v("pageClass")]),t._v("：")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pageClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" custom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("page"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("class\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n")])])]),a("ul",[a("li",[t._v("然后就可以写针对该页面的 CSS 样式了：")])]),t._v(" "),a("div",{staticClass:"language-CSS extra-class"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* .vuepress/override.styl */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".theme-container.custom-page-class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 特定页面的 CSS */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("  结合上面的代码，那我们可以猜测，"),a("code",[t._v("theme-container")]),t._v(" 是 VuePress 页面默认的样式，而 pageClass 则是在同一页面元素下，多加一个名为 "),a("code",[t._v("custom-page-class")]),t._v(" 的类，那么就可以合理解释官方实例的写法了。事实上，使用浏览器调试查看 HTML 代码可以发现，它就是这么做的。"),a("br"),t._v("\n  如果你按照上述步骤操作却没有产生效果，那你可能踩了跟我一样的坑。在上述代码中，CSS 文件标注的文件名是 "),a("code",[t._v(".vuepress/override.styl")]),t._v("。那它的意思是 .vuepres 文件夹下的 override.styl？其实不是，我猜它要表达的是在 "),a("code",[t._v(".vuepres")]),t._v(" 文件夹下 "),a("code",[t._v("某个重写默认样式的文件")]),t._v("。"),a("br"),t._v("\n  那么如何重写默认样式的文件呢？"),a("br"),t._v("\n  看看"),a("a",{attrs:{href:"https://www.vuepress.cn/config/#styling",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("怎么说。在 .vuepress 文件夹中，添加 "),a("code",[t._v("styles")]),t._v(" 文件夹，然后在这个文件夹中添加 "),a("code",[t._v("index.styl")]),t._v(" 这是约定重写默认样式的入口文件。创建完 index.styl 以后，直接写对应的样式即可。"),a("br"),t._v("\n  此时，如果要分离模块样式代码，只需要新建文件夹，然后将自定义的样式文件 "),a("code",[t._v("@import")]),t._v(" 到 "),a("code",[t._v("index.styl")]),t._v(" 即可。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("关于类名")]),t._v(" "),a("p",[t._v("直接使用浏览器调试器查看元素的 class。。。")])]),t._v(" "),a("p",[t._v("  综上所述：")]),t._v(" "),a("ul",[a("li",[t._v("如果你只需要重写页面样式，直接在 "),a("code",[t._v(".vuepres/styles/index.styl")]),t._v(" 中重写样式即可，但这会影响全局。")]),t._v(" "),a("li",[t._v("如果需要只针对某个页面进行样式调整，则只需要在文档的 "),a("code",[t._v("YAML front matter")]),t._v(" 中配置 "),a("code",[t._v("pageClass")]),t._v(" 来给当前页面添加类型，这样就可以通过 CSS 选择器来针对某个页面来改变样式，至于 CSS 选择器，这里就不在赘述。")])]),t._v(" "),a("h3",{attrs:{id:"自定义页面布局"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义页面布局"}},[t._v("#")]),t._v(" 自定义页面布局")]),t._v(" "),a("p",[t._v("  通过"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/default-theme-config.html#%E7%89%B9%E5%AE%9A%E9%A1%B5%E9%9D%A2%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B8%83%E5%B1%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("，我们可以知道，VuePress 提供了特定页面布局，而这个特定页面布局实际上指的是 Vue 中的页面组件。"),a("br"),t._v("\n  对于 Vue 的组件化管理，我是这么理解的：")]),t._v(" "),a("ul",[a("li",[t._v("使用 vue 模板文件创建组件。")]),t._v(" "),a("li",[t._v("当 vue 文件被直接访问时，它相当于一个页面。")]),t._v(" "),a("li",[t._v("而当 vue 文件被引入时，vue 文件资源就可以被作为一个页面的某个模块使用。")])]),t._v(" "),a("p",[t._v("  这里官方说的特定页面布局其实就是将文档按照 vue 文件设置的页面进行渲染。如果指向的 vue 文件为空，则当访问这个文档的页面地址时，整个页面都会为空。"),a("br"),t._v("\n  使用方法：")]),t._v(" "),a("ul",[a("li",[t._v("在 "),a("code",[t._v(".vuepres")]),t._v(" 文件夹中添加 "),a("code",[t._v("components")]),t._v(" 文件夹，这是页面访问的起始路径。")]),t._v(" "),a("li",[t._v("在文档的 "),a("code",[t._v("YAML front matter")]),t._v(" 中添加 "),a("code",[t._v("layout: [自定义组件名].vue")]),t._v(" 来将文档按照 "),a("code",[t._v(".vuepress/components/[自定义组件名].vue")]),t._v(" 进行渲染。")])]),t._v(" "),a("p",[t._v("  自定义布局需要对文档数据进行渲染，可以配合"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/writing-a-theme.html#%E8%8E%B7%E5%8F%96%E6%B8%B2%E6%9F%93%E5%86%85%E5%AE%B9",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档-获取渲染内容"),a("OutboundLink")],1),t._v("和"),a("a",{attrs:{href:"https://www.vuepress.cn/theme/writing-a-theme.html#%E7%BD%91%E7%AB%99%E5%92%8C%E9%A1%B5%E9%9D%A2%E7%9A%84%E5%85%83%E6%95%B0%E6%8D%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档-网站和页面的元数据"),a("OutboundLink")],1),t._v("使用。")]),t._v(" "),a("h3",{attrs:{id:"其他插件的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他插件的使用"}},[t._v("#")]),t._v(" 其他插件的使用")]),t._v(" "),a("p",[t._v("  可以看"),a("a",{attrs:{href:"https://www.vuepress.cn/plugin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("，这里有默认主题下没有整合的插件。")]),t._v(" "),a("h2",{attrs:{id:"部署到-github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署到-github-pages"}},[t._v("#")]),t._v(" 部署到 GitHub Pages")]),t._v(" "),a("h3",{attrs:{id:"配置-github-pages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置-github-pages"}},[t._v("#")]),t._v(" 配置 GitHub Pages")]),t._v(" "),a("ul",[a("li",[t._v("登录 github 账户，在 github 账户上创建一个用于存放发布站点的仓库。")]),t._v(" "),a("li",[t._v("在仓库的 setting 中找到 GitHub Pages 的配置项，将其中的 Source 下的下拉框选择保存打包代码的分支即可。")])]),t._v(" "),a("h3",{attrs:{id:"部署步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署步骤"}},[t._v("#")]),t._v(" 部署步骤")]),t._v(" "),a("ul",[a("li",[t._v("在 "),a("code",[t._v("config.js")]),t._v(" 中设置 "),a("code",[t._v("base")]),t._v(" 的值。")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("理解 ```base```")]),t._v(" "),a("p",[a("code",[t._v("base")]),t._v(" 的值是部署站点的基础路径。举个例子，在 GitHub pages 中：")]),t._v(" "),a("ul",[a("li",[t._v("如果站点部署在根路径下，即 "),a("code",[t._v("https://xxx.github.io/")]),t._v("，则 "),a("code",[t._v("base")]),t._v(" 的值应设置为 "),a("code",[t._v("'/'")]),t._v("，或者不设置，因为 "),a("code",[t._v("base")]),t._v(" 的默认值就是 "),a("code",[t._v("'/'")]),t._v("。")]),t._v(" "),a("li",[t._v("如果站点不再根目录下，即 "),a("code",[t._v("https://xxx.github.io/blog/")]),t._v("，则  "),a("code",[t._v("base")]),t._v(" 的值应设置为 "),a("code",[t._v("'/blog/'")]),t._v("。")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("使用 "),a("code",[t._v("vuepress build docs")]),t._v(" 命令或者之前在 package.json 中配置过的 npm 命令 "),a("code",[t._v("npm run build")]),t._v(" 进行项目打包构建。")])]),t._v(" "),a("li",[a("p",[t._v("使用 git 将 "),a("code",[t._v("docs/.vuepress/dist")]),t._v(" 中打包发布好的项目 push 到 github 上创建的设置好 GitHub Pages 的仓库中，完成 GitHub Pages 的部署。")])])]),t._v(" "),a("h3",{attrs:{id:"整合部署过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#整合部署过程"}},[t._v("#")]),t._v(" 整合部署过程")]),t._v(" "),a("p",[t._v("  在"),a("a",{attrs:{href:"https://www.vuepress.cn/guide/deploy.html#github-pages",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1),t._v("中，我们可以看到，VuePress 建议我们建立一个后缀名为 "),a("code",[t._v(".sh")]),t._v(" 的脚本，脚本内容"),a("code",[t._v("见文档")]),t._v("内容。此处我对文档内容进行了一些修改，以下是我的脚本内容：")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/usr/bin/env sh")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 确保脚本抛出遇到的错误")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" -e\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 生成静态文件")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run build "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 由于我修改了 package.json 的脚本，此处理应对应")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 进入生成的文件夹")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" docs/.vuepress/dist\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是将 dist 中的文件提交到本地 git 管理中")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" -A\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将生成的静态文件推送到 github 的 gh-pages 分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gh-pages 分支作为 github pages 的展示页面")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f https://github.com/L-SssA/Blog.git master:gh-pages\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 回到 .sh 文件所在目录")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" -\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将源码推送到 github 主分支")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -f https://github.com/L-SssA/Blog.git master\n\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),a("p",[t._v("  在运行脚本前，需要先将源码 commit 一下，因为脚本只是做了推送，由于源码的改动 msg 应该每次提交都不同，因此无法写到脚本中，需要手动操作。")])]),t._v(" "),a("p",[t._v("  从上述代码中可知，我在 github 上创建了一个名为 "),a("code",[t._v("Blog")]),t._v(" 的仓库，然后在仓库中创建了两个分支，主分支用于保存源码，打包后将打包项目发布到 gh-pages 分支中，而 GitHub Pages 的配置中，我也选择了 gh-pages 分支。"),a("br"),t._v("\n  这样，GitHub Pages 就部署完成了。")]),t._v(" "),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[t._v("  这是我初学 VuePress 的学习笔记。说实话，写了很久，而且也并不能十分透彻。目前的话，只能够部署成默认主题的样式。不仅如此，有一些实用并且是必要的插件我没有配置，因为我相信这个网站还不是它最终的样子，因此像 "),a("code",[t._v("Google analytics 谷歌统计")]),t._v(" 等插件是没有添加的。")])])}),[],!1,null,null,null);s.default=n.exports}}]);